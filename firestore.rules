rules_version = '2';
service cloud.firestore {

  match /databases/{database}/documents {

    match /tips/{id} {
          allow read: if true;
          allow create: if canCreate();
          allow update: if isLoggedIn() && belongsTo();
          allow delete: if isLoggedIn() && belongsTo();
        }

    function isLoggedIn() { 
      return request.auth.uid != null;
    }

    function belongsTo() {    
      return request.auth.uid == resource.auth.uid;
    }

    function canCreate() {
      let hasValidTimestamp = request.time == request.resource.data.createdAt;
      return belongsTo() && hasValidTimestamp;
    }

    function isValidUpdatedPost() {
      let post = request.resource.data;
      let hasRequiredFields = post.keys().hasAny(['title', 'image', 'link', 'location', 'tags', 'description', 'updatedAt', 'published']);
      let isValidContent = post.description is string && post.description.size() < 5000;

      return hasRequiredFields && isValidContent;
    }

  }
}


